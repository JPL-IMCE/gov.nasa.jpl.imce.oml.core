
buildscript {
	ext.kotlin_version = '1.1.0'
	repositories {
		jcenter()
		maven {
		  url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "gradle.plugin.com.dorongold.plugins:task-tree:1.3"
		classpath 'org.xtext:xtext-gradle-plugin:1.0.17'
		classpath 'org.xtext:xtext-idea-gradle-plugin:1.0.17'
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
}

plugins {
	id 'com.gradle.build-scan' version '1.1.1'

	// https://github.com/bintray/gradle-bintray-plugin#step-2-apply-the-plugin-to-your-gradle-build-script
	id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: 'kotlin'

apply plugin: 'com.dorongold.task-tree'

buildScan {
	server = "https://e.grdev.net"
}

System.setProperty('file.encoding', 'UTF-8')

switch(System.getProperty("os.name")){
	case ~/Mac OS X/: System.setProperty('osgi.platform', 'cocoa.macosx.x86_64');break;
	case ~/Windows.*/: println "Windows support not done yet here";break;
	case ~/Linux/: System.setProperty('osgi.platform', 'gtk.linux.x86_64');break;
}

subprojects {

	ext.xtextVersion = '2.11.0'

	// see http://services.typefox.io/open-source/jenkins/job/xtext-core/job/maintenance_2.11/lastSuccessfulBuild/artifact/build/p2-repository/plugins/
	ext.xtextCoreVersion = '2.11.1.v20170223-0955'

	// see http://services.typefox.io/open-source/jenkins/job/xtext-eclipse/job/maintenance_2.11/lastSuccessfulBuild/artifact/build/p2-repository/plugins/
	ext.xtextUIVersion = '2.11.1.v20170201-1233'

	// see http://services.typefox.io/open-source/jenkins/job/xtext-xtend/job/maintenance_2.11/lastSuccessfulBuild/artifact/build/p2-repository/plugins/
	ext.xtendVersion = '2.11.1.v20170201-1447'

	// see http://download.eclipse.org/eclipse/updates/4.6/R-4.6.3-201703010400/
	ext.emfVersion = '2.11.0.v20160420-0247'

	// see http://builds.gradle.org:8000/eclipse/update-site/mirror/releases-neon/plugins/
	ext.emfUIVersion = '2.12.0.v20160526-0356'
	ext.log4jVersion = '1.2.15.v201012070815'

	repositories {
		jcenter()
		mavenCentral()

		// for resolving org.eclipse.xtend.*
		ivy {
			url "http://services.typefox.io/open-source/jenkins/job/xtext-xtend/job/maintenance_2.11/lastSuccessfulBuild/artifact/build/p2-repository/"
			layout "pattern", {
				artifact "plugins/[artifact]_[revision].[ext]"
			}
		}

		// for resolving org.eclipse.xtext.*
		ivy {
			url "http://services.typefox.io/open-source/jenkins/job/xtext-eclipse/job/maintenance_2.11/lastSuccessfulBuild/artifact/build/p2-repository/"
			layout "pattern", {
				artifact "plugins/[artifact]_[revision].[ext]"
			}
		}

		// for resolving org.eclipse.xtext.{ide,testing}
		ivy {
			url "http://services.typefox.io/open-source/jenkins/job/xtext-core/job/maintenance_2.11/lastSuccessfulBuild/artifact/build/p2-repository/"
			layout "pattern", {
				artifact "plugins/[artifact]_[revision].[ext]"
			}
		}
		// for resolving Eclipse SDK plugins
		// See versions here: http://download.eclipse.org/eclipse/downloads/
		ivy {
			url "http://download.eclipse.org/eclipse/updates/4.6/R-4.6.3-201703010400/"
			layout "pattern", {
				artifact "plugins/[artifact]_[revision].[ext]"
			}
		}

		// for resolving org.eclipse.emf.*.ui* and orbit plugins
		ivy {
			url "http://builds.gradle.org:8000/eclipse/update-site/mirror/releases-neon/"
			layout "pattern", {
				artifact "plugins/[artifact]_[revision].[ext]"
			}
		}
	}

	apply plugin: 'java'
	apply plugin: 'org.xtext.xtend'
	apply from: "${rootDir}/gradle/source-layout.gradle"
    apply from: "${rootDir}/gradle/java-compiler-settings.gradle"
	apply from: "${rootDir}/gradle/maven-deployment.gradle"
	apply plugin: 'eclipse'
	apply plugin: 'idea'
	apply plugin: 'com.jfrog.bintray'
	apply plugin: 'maven'
	apply plugin: 'maven-publish'

    HelloTaskKt.declareHelloTask(project)

	group = 'gov.nasa.jpl.imce.oml'
	version = '0.4.0'

	configurations.all {
		exclude group: 'asm'

		resolutionStrategy {
			dependencySubstitution {
				// Handle dependency on a variable.
				substitute module('org.eclipse.platform:org.eclipse.swt.${osgi.platform}') with module("org.eclipse.platform:org.eclipse.swt.${System.getProperty('osgi.platform')}:3.+")

				substitute module('org.eclipse.emf:org.eclipse.emf.ecore.change:[2.5.0,)') with module("org.eclipse.emf:org.eclipse.emf.ecore.change:${emfVersion}")
			}
		}
	}
}


dependencies {
	compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
}

// https://docs.gradle.org/current/userguide/working_with_files.html
tasks.withType(AbstractArchiveTask) {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}