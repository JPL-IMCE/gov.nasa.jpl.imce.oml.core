/**
 * Copyright 2016 California Institute of Technology ("Caltech").
 * U.S. Government sponsorship acknowledged.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * License Terms
 */
package gov.nasa.jpl.imce.oml.generators;

import gov.nasa.jpl.imce.oml.generators.OMLUtilities;

public class OMLSpecificationDocGenerator extends OMLUtilities {
  public static Object main(final Object/* type is 'null' */ args) {
    throw new Error("Unresolved compilation problems:"
      + "\n!= cannot be resolved."
      + "\nThe method or field System is undefined"
      + "\nThe method or field System is undefined"
      + "\nThe method generate(String) from the type OMLSpecificationDocGenerator refers to the missing type Object"
      + "\nlength cannot be resolved"
      + "\nerr cannot be resolved"
      + "\nprintln cannot be resolved"
      + "\nexit cannot be resolved"
      + "\nget cannot be resolved");
  }
  
  public Object generate(final /* String */Object targetDir) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field Paths is undefined"
      + "\nThe method or field EClassifiers is undefined"
      + "\nThe method or field EClass is undefined"
      + "\nThe method or field name is undefined"
      + "\nThe method or field isAbstract is undefined"
      + "\nStringBuffer cannot be resolved."
      + "\nFileOutputStream cannot be resolved."
      + "\nFile cannot be resolved."
      + "\nFile cannot be resolved to a type."
      + "\nThe method or field EClass is undefined"
      + "\nThe method or field name is undefined"
      + "\nThe method or field EClass is undefined"
      + "\nThe method or field name is undefined"
      + "\nThe method or field EClass is undefined"
      + "\nThe method or field name is undefined"
      + "\nThe method or field EClass is undefined"
      + "\nThe method or field name is undefined"
      + "\nThe method or field EClass is undefined"
      + "\nThe method or field name is undefined"
      + "\nInvalid number of arguments. The method isGlossary(ENamedElement) is not applicable without arguments"
      + "\nInvalid number of arguments. The method isSchema(ENamedElement) is not applicable without arguments"
      + "\nInvalid number of arguments. The method isAPI(ENamedElement) is not applicable without arguments"
      + "\nInvalid number of arguments. The method isSchema(ENamedElement) is not applicable without arguments"
      + "\nInvalid number of arguments. The method isOO(ENamedElement) is not applicable without arguments"
      + "\nInvalid number of arguments. The method isGlossary(ENamedElement) is not applicable without arguments"
      + "\nInvalid number of arguments. The method isGlossary(ENamedElement) is not applicable without arguments"
      + "\nInvalid number of arguments. The method isGlossary(ENamedElement) is not applicable without arguments"
      + "\nInvalid number of arguments. The method isGlossary(ENamedElement) is not applicable without arguments"
      + "\nInvalid number of arguments. The method isGlossary(ENamedElement) is not applicable without arguments"
      + "\nThe field OMLXcorePackages.c refers to the missing type Object"
      + "\nThe field OMLXcorePackages.t refers to the missing type Object"
      + "\nThe field OMLXcorePackages.g refers to the missing type Object"
      + "\nThe field OMLXcorePackages.b refers to the missing type Object"
      + "\nThe field OMLXcorePackages.d refers to the missing type Object"
      + "\nThe method isGlossary(ENamedElement) from the type OMLUtilities refers to the missing type Boolean"
      + "\nThe method isSchema(ENamedElement) from the type OMLUtilities refers to the missing type Boolean"
      + "\nThe method isAPI(ENamedElement) from the type OMLUtilities refers to the missing type Boolean"
      + "\nThe method isSchema(ENamedElement) from the type OMLUtilities refers to the missing type Boolean"
      + "\nThe method isOO(ENamedElement) from the type OMLUtilities refers to the missing type Boolean"
      + "\nThe method generateGlossaryFile(String, String, List, StringBuffer) from the type OMLSpecificationDocGenerator refers to the missing type Object"
      + "\nThe field OMLXcorePackages.c refers to the missing type Object"
      + "\nThe method isGlossary(ENamedElement) from the type OMLUtilities refers to the missing type Boolean"
      + "\nThe method generateGlossaryFile(String, String, List, StringBuffer) from the type OMLSpecificationDocGenerator refers to the missing type Object"
      + "\nThe field OMLXcorePackages.t refers to the missing type Object"
      + "\nThe method isGlossary(ENamedElement) from the type OMLUtilities refers to the missing type Boolean"
      + "\nThe method generateGlossaryFile(String, String, List, StringBuffer) from the type OMLSpecificationDocGenerator refers to the missing type Object"
      + "\nThe field OMLXcorePackages.g refers to the missing type Object"
      + "\nThe method isGlossary(ENamedElement) from the type OMLUtilities refers to the missing type Boolean"
      + "\nThe method generateGlossaryFile(String, String, List, StringBuffer) from the type OMLSpecificationDocGenerator refers to the missing type Object"
      + "\nThe field OMLXcorePackages.b refers to the missing type Object"
      + "\nThe method isGlossary(ENamedElement) from the type OMLUtilities refers to the missing type Boolean"
      + "\nThe method generateGlossaryFile(String, String, List, StringBuffer) from the type OMLSpecificationDocGenerator refers to the missing type Object"
      + "\nThe field OMLXcorePackages.d refers to the missing type Object"
      + "\nThe method isGlossary(ENamedElement) from the type OMLUtilities refers to the missing type Boolean"
      + "\nget cannot be resolved"
      + "\ntoFile cannot be resolved"
      + "\nmkdirs cannot be resolved"
      + "\nmap cannot be resolved"
      + "\nflatten cannot be resolved"
      + "\nfilter cannot be resolved"
      + "\nfilter cannot be resolved"
      + "\nsortBy cannot be resolved"
      + "\ngroupBy cannot be resolved"
      + "\nget cannot be resolved"
      + "\nfilter cannot be resolved"
      + "\nget cannot be resolved"
      + "\nfilter cannot be resolved"
      + "\n&& cannot be resolved"
      + "\n! cannot be resolved"
      + "\nget cannot be resolved"
      + "\nfilter cannot be resolved"
      + "\nsize cannot be resolved"
      + "\nget cannot be resolved"
      + "\nsize cannot be resolved"
      + "\nget cannot be resolved"
      + "\nsize cannot be resolved"
      + "\nsize cannot be resolved"
      + "\nget cannot be resolved"
      + "\nsize cannot be resolved"
      + "\nsize cannot be resolved"
      + "\nsize cannot be resolved"
      + "\nsize cannot be resolved"
      + "\nsize cannot be resolved"
      + "\nget cannot be resolved"
      + "\nsize cannot be resolved"
      + "\nsize cannot be resolved"
      + "\nget cannot be resolved"
      + "\nsize cannot be resolved"
      + "\ntoAbsolutePath cannot be resolved"
      + "\ntoString cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nseparator cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nEClassifiers cannot be resolved"
      + "\nfilter cannot be resolved"
      + "\nfilter cannot be resolved"
      + "\nsortBy cannot be resolved"
      + "\nEClassifiers cannot be resolved"
      + "\nfilter cannot be resolved"
      + "\nfilter cannot be resolved"
      + "\nsortBy cannot be resolved"
      + "\nEClassifiers cannot be resolved"
      + "\nfilter cannot be resolved"
      + "\nfilter cannot be resolved"
      + "\nsortBy cannot be resolved"
      + "\nEClassifiers cannot be resolved"
      + "\nfilter cannot be resolved"
      + "\nfilter cannot be resolved"
      + "\nsortBy cannot be resolved"
      + "\nEClassifiers cannot be resolved"
      + "\nfilter cannot be resolved"
      + "\nfilter cannot be resolved"
      + "\nsortBy cannot be resolved"
      + "\nwrite cannot be resolved"
      + "\ntoString cannot be resolved"
      + "\nbytes cannot be resolved"
      + "\nclose cannot be resolved");
  }
  
  public Object generateGlossaryFile(final /* String */Object n, final /* String */Object group, final /* List<EClass> */Object entries, final /* StringBuffer */Object buffer) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field isAbstract is undefined"
      + "\n!== cannot be resolved."
      + "\n+= cannot be resolved."
      + "\n!== cannot be resolved."
      + "\n+= cannot be resolved."
      + "\n!== cannot be resolved."
      + "\n+= cannot be resolved."
      + "\n!== cannot be resolved."
      + "\n+= cannot be resolved."
      + "\nInvalid number of arguments. The method isSchema(ENamedElement) is not applicable without arguments"
      + "\nInvalid number of arguments. The method isAPI(ENamedElement) is not applicable without arguments"
      + "\nInvalid number of arguments. The method isSchema(ENamedElement) is not applicable without arguments"
      + "\nInvalid number of arguments. The method isOO(ENamedElement) is not applicable without arguments"
      + "\nThe method isSchema(ENamedElement) from the type OMLUtilities refers to the missing type Boolean"
      + "\nThe method isAPI(ENamedElement) from the type OMLUtilities refers to the missing type Boolean"
      + "\nThe method isSchema(ENamedElement) from the type OMLUtilities refers to the missing type Boolean"
      + "\nThe method isOO(ENamedElement) from the type OMLUtilities refers to the missing type Boolean"
      + "\nThe method generateClassGlossaryContents(StringBuffer, EClass) from the type OMLSpecificationDocGenerator refers to the missing type StringBuffer"
      + "\nThe method generateClassGlossaryContents(StringBuffer, EClass) from the type OMLSpecificationDocGenerator refers to the missing type StringBuffer"
      + "\nThe method generateClassGlossaryContents(StringBuffer, EClass) from the type OMLSpecificationDocGenerator refers to the missing type StringBuffer"
      + "\nThe method generateClassGlossaryContents(StringBuffer, EClass) from the type OMLSpecificationDocGenerator refers to the missing type StringBuffer"
      + "\ngroupBy cannot be resolved"
      + "\nget cannot be resolved"
      + "\nget cannot be resolved"
      + "\nfilter cannot be resolved"
      + "\nfilter cannot be resolved"
      + "\n&& cannot be resolved"
      + "\n! cannot be resolved"
      + "\nfilter cannot be resolved"
      + "\nappend cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ntoLowerCase cannot be resolved"
      + "\n&& cannot be resolved"
      + "\nempty cannot be resolved"
      + "\n! cannot be resolved"
      + "\nappend cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nsize cannot be resolved"
      + "\ntoLowerCase cannot be resolved"
      + "\nforEach cannot be resolved"
      + "\nappend cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nsize cannot be resolved"
      + "\ntoLowerCase cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n&& cannot be resolved"
      + "\nempty cannot be resolved"
      + "\n! cannot be resolved"
      + "\nappend cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nsize cannot be resolved"
      + "\ntoLowerCase cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nsortWith cannot be resolved"
      + "\nforEach cannot be resolved"
      + "\n&& cannot be resolved"
      + "\nempty cannot be resolved"
      + "\n! cannot be resolved"
      + "\nappend cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nsize cannot be resolved"
      + "\ntoLowerCase cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nforEach cannot be resolved"
      + "\n&& cannot be resolved"
      + "\nempty cannot be resolved"
      + "\n! cannot be resolved"
      + "\nappend cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nsize cannot be resolved"
      + "\ntoLowerCase cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nforEach cannot be resolved");
  }
  
  public /* StringBuffer */Object generateClassGlossaryContents(final /* StringBuffer */Object buffer, final /* EClass */Object eClass) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method pluralizeIfMany(String, int) from the type OMLUtilities refers to the missing type String"
      + "\nThe method pluralizeIfMany(String, int) from the type OMLUtilities refers to the missing type String"
      + "\nappend cannot be resolved"
      + "\nname cannot be resolved"
      + "\nmarkDown cannot be resolved"
      + "\nisSchema cannot be resolved"
      + "\nappend cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nisAPI cannot be resolved"
      + "\nappend cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nisOO cannot be resolved"
      + "\nappend cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nappend cannot be resolved"
      + "\nisAbstract cannot be resolved"
      + "\nESuperClasses cannot be resolved"
      + "\nempty cannot be resolved"
      + "\nESpecificClasses cannot be resolved"
      + "\nempty cannot be resolved"
      + "\n! cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nsize cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nsize cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nappend cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nname cannot be resolved"
      + "\nisAbstract cannot be resolved"
      + "\nsize cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nsize cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nappend cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nname cannot be resolved"
      + "\nisSchema cannot be resolved"
      + "\nappend cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nfunctionalAPIOrOrderingKeyAttributes cannot be resolved"
      + "\ncolumnName cannot be resolved"
      + "\nschemaColumnTypeDescription cannot be resolved");
  }
}
